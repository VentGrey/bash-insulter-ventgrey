print_message () {

    local messages
    local message

    messages=(
        "Todo meco -.-"
        "Si usas $SHELL así de mal, no me sorprende que necesites tantos plugins"
        "¡Lee el jodido manual!"
        "Vaya, pensaba que no podía conocer a alguien más tonto...me equivoqué."
        "¿Te han dicho que eres un usuario DEMASIADO promedio?"
        "Vaya, este nivel de inteligencia explica por que usas $EDITOR"
        "Gracias a gente como tú Red Hat decidió matar CentOS"
        "Tal vez le informe al watchdog del kernel que interrumpa tus idioteces"
        "Ojalá te bajen el sueldo"
        "Escribes comandos como programas, con el culo."
        "$USER..no sabes cuanto te odio..."
        "Estuve buscando con fzf por $HOME pero no encontré un cerebro para ti"
        "Por favor regresa a Windows..."
        "Y el premio para el ser humano más idiota va para....¡${USER}!"
        "ERROR_USUARIO_INCOMPETENTE"
        "Ok, haciendo rm -rf en $PWD"
        "$RANDOM personas acaban de morir por tu culpa."
        "Vaya, deberían añadir la idiotez a los ajustes de accesibilidad."
        "Esto no es Python, aquí usamos comandos de verdad..."
        "Eh? Eso era un comando?"
        "¿Qué mierda tratas de hacer?"
        "Fingiré que no leí eso..."
        "Wey, te voy a matar."
        "Te estás ganando que borre $HOME"
        "Hey chico! Que tal si escribes un comando para el 87deFuckYou!"
        "Ehm, no, mejor tu usa GUI."
        "Utiliza los dedos y no las nalgas la próxima vez"
        "error code: 1D10T4"
        "ACHTUNG! ALLES TURISTEN UND NONTEKNISCHEN LOOKENPEEPERS! DAS KOMPUTERMASCHINE IST NICHT FÜR DER GEFINGERPOKEN UND MITTENGRABEN! ODERWISE IST EASY TO SCHNAPPEN DER SPRINGENWERK, BLOWENFUSEN UND POPPENCORKEN MIT SPITZENSPARKEN. IST NICHT FÜR GEWERKEN BEI DUMMKOPFEN. DER RUBBERNECKEN SIGHTSEEREN KEEPEN DAS COTTONPICKEN HÄNDER IN DAS POCKETS MUSS. ZO RELAXEN UND WATSCHEN DER BLINKENLICHTEN."
        "Además de dejarte caer de pequeño tu papá también decía LOL."
        "Por eso no consigues trabajo..."
        "Wow, estás usando $SHELL una shell culera usualmente tiene usuarios culeros"
        "(╯°□°）╯︵ ┻━┻"
        "¯\\_(ツ)_/¯"
        "Alguien creó esta distro para que la cagaras tan rápido?"
        "¿De que te sirve estar vivo si estás bien pendejo >:c?"
        "Wakala, no le sabes a las compus"
        "Apestas usando $OSTYPE ¿lo sabías?"
        "No, otro novato no!"
        "Estoy considerando muy seriamente desinstalarme"
        "Esto no es frontend hijo, aquí no puedes cagarla gratis"
        "Por eso no tienes amigos"
        "Hasta un kali kuaker sabe más que tu"
        "SAQUESE ALV, NO LE SABES A LAS COMPUS"
        "VERGA DE SU MADRE ¿QUE ES ESO? o.O"
        "Tu eres la prueba de que la comunidad de Linux está bien siendo elitista"
        "Ojalá se te vaya la luz cuando actualices la BIOS"
        "Si ser idiota fuera pecado tu no entrarías al reino de los cielos"
        "Esto me dice que bailas con las alarmas de los coches..."
        "¿A mi madre se le queman los huevos? La tuya no se los rasura."
        "Me da asco de solo parsearlo"
        "¿Por qué no buscas un framework de JS que te ayude con esto?"
        "Habrá algo en pip para que aprendas como debe ser ¿no?."
        "*Vomita*"
        "Esta habilidad con los comandos es diga del más capo...rongas"
        "De ahora en adelante te apodaré La Palomas...ticas"
        "Ojalá se descomponga tu computadora"
        "Le daré chocolate a tu perro"
        "Dale Aguacate a tus pericos"
        "Huele a que sigues usando GOTO en tus programas"
    )

    # If CMD_NOT_FOUND_MSGS array is populated use those messages instead of the defaults
    [[ -n ${CMD_NOT_FOUND_MSGS} ]] && messages=( "${CMD_NOT_FOUND_MSGS[@]}" )

    # If CMD_NOT_FOUND_MSGS_APPEND array is populated append those to the existing messages
    [[ -n ${CMD_NOT_FOUND_MSGS_APPEND} ]] && messages+=( "${CMD_NOT_FOUND_MSGS_APPEND[@]}" )

    # Seed RANDOM with an integer of some length
    RANDOM=$(od -vAn -N4 -tu < /dev/urandom)

    # Print a randomly selected message, but only about half the time to annoy the user a
    # little bit less.
    if [[ $((${RANDOM} % 2)) -lt 1 ]]; then
        message=${messages[${RANDOM} % ${#messages[@]}]}
        printf "\\n  %s\\n\\n" "$(tput bold)$(tput setaf 1)${message}$(tput sgr0)" >&2
    fi
}

function_exists () {
    # Zsh returns 0 even on non existing functions with -F so use -f
    declare -f "$1" > /dev/null
    return $?
}

#
# The idea below is to copy any existing handlers to another function
# name and insert the message in front of the old handler in the
# new handler. By default, neither bash or zsh has has a handler function
# defined, so the default behaviour is replicated.
#
# Also, ensure the handler is only copied once. If we do not ensure this
# the handler would add itself recursively if this file happens to be
# sourced multiple times in the same shell, resulting in a neverending
# stream of messages.
#

#
# Zsh
#
if function_exists command_not_found_handler; then
    if ! function_exists orig_command_not_found_handler; then
        eval "orig_$(declare -f command_not_found_handler)"
    fi
else
    orig_command_not_found_handler () {
        printf "zsh: command not found: %s\\n" "$1" >&2
        return 127
    }
fi

command_not_found_handler () {
    print_message
    orig_command_not_found_handler "$@"
}


#
# Bash
#
if function_exists command_not_found_handle; then
    if ! function_exists orig_command_not_found_handle; then
        eval "orig_$(declare -f command_not_found_handle)"
    fi
else
    orig_command_not_found_handle () {
        printf "%s: %s: Orden no encontrada\\n" "$0" "$1" >&2
        return 127
    }
fi

command_not_found_handle () {
    print_message
    orig_command_not_found_handle "$@"
}
